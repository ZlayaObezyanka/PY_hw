# # Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# # Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# # Пользователь вводит 2 числа. 
# # n — кол-во элементов первого множества. 
# # m — кол-во элементов второго множества. 
# # Затем пользователь вводит сами элементы множеств.

# def filling_arr(temp):
#     temp_l = []
#     for i in range(temp):
#         a = int(input())
#         temp_l.append(a)

#     return temp_l
    


# n = int(input())
# m = int(input())
# answer = {}
# first_list = []
# second_list = []

# first_list = filling_arr(n)
# second_list = filling_arr(m)
# answer = set(first_list + second_list)

# print(answer)



# # Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. 
# # Она растёт на круглой грядке, причём кусты высажены только по окружности. 
# # Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# # Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло a[i] ягод.
# # В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
# # Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# # Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, 
# # находясь перед некоторым кустом заданной во входном списке урожайности грядки.

# bush = int(input('кол-во кустов: '))
# berries = []
# for i in range(bush):
#     a = int(input('кол-во ягод на кусту: '))
#     berries.append(a)

# answer = []
# for i in range(len(arr)):
#        answer.append([i-2] + arr[i-1] + arr[i])

# print(max(answer))